version: 2.1

orbs:
  jsc-sfdx: jsc/salesforce@<<pipeline.parameters.dev-orb-version>>
  orb-tools: circleci/orb-tools@10.0
  bats: circleci/bats@1.0
  shellcheck: circleci/shellcheck@2.0

parameters:
  run-integration-tests:
    description: An internal flag to prevent integration test from running before a development version has been created.
    type: boolean
    default: false
  dev-orb-version:
    description: >
      The development version of the orb to test.
      This value is automatically adjusted by the "trigger-integration-tests-workflow" job to correspond with the specific version created by the commit and should not be edited.
      A "dev:alpha" version must exist for the initial pipeline run.
    type: string
    default: "dev:alpha"
  devhubUsername:
    description: Production username for the devhub org
    type: string
    default: info@curious-impala-bhgtyu.com
  devhubInstanceUrl:
    description: Production instance URL
    type: string
    default: https://curious-impala-bhgtyu-dev-ed.my.salesforce.com
  uatSandboxUsername:
    description: Username for the Orb Dev sandbox
    type: string
    default: business@lietzau-consulting.de.orbdev

jobs:
  packaging_commands:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Checkout salesforce/demo-package
          command: |
            git submodule update --init --recursive
            git submodule foreach --recursive git checkout master
      - jsc-sfdx/install
      - jsc-sfdx/auth:
          username: << pipeline.parameters.devhubUsername >>
          instanceUrl: << pipeline.parameters.devhubInstanceUrl >>
          jwtKey: TEST_JWT_KEY
          consumerKey: TEST_CONSUMER_KEY
          setDefault: true
      - jsc-sfdx/auth:
          instanceUrl: https://test.salesforce.com
          username: << pipeline.parameters.uatSandboxUsername >>
          jwtKey: TEST_JWT_KEY
          consumerKey: TEST_CONSUMER_KEY_UAT
      - jsc-sfdx/package-get-installed:
          targetOrg: << pipeline.parameters.uatSandboxUsername >>
          devhubUsername: << pipeline.parameters.devhubUsername >>
      - jsc-sfdx/package-build:
          projectPath: salesforce/demo-package
          package: PACKAGE_ID
      - jsc-sfdx/package-get-latest-build:
          devhubUsername: << pipeline.parameters.devhubUsername >>
          packageId: PACKAGE_ID
      - jsc-sfdx/package-get-latest-build:
          devhubUsername: << pipeline.parameters.devhubUsername >>
          packageId: PACKAGE_ID
          releaseCandidateOnly: true
          packageVersionExport: MY_LATEST_RELEASE_CANDIDATE_BUILD
      - run:
          name: Echoing package versions
          command: |
            echo "New package version is: $SUBSCRIBER_PACKAGE_VERSION_ID"
            echo "Latest build is: $LATEST_PACKAGE_VERSION_ID"
            echo "Latest RC build is: $MY_LATEST_RELEASE_CANDIDATE_BUILD"
            echo "Currently installed version is: $INSTALLED_PACKAGE_VERSION_ID"
      - jsc-sfdx/package-install:
          installLatestBuild: false
          targetOrg: << pipeline.parameters.devhubUsername >>
      - jsc-sfdx/source-deploy:
          targetOrg: << pipeline.parameters.devhubUsername >>
          projectPath: salesforce/demo-package
          directories: src/deploy/main src/deploy/special

  testing_commands:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - jsc-sfdx/install
      - jsc-sfdx/auth:
          username: << pipeline.parameters.devhubUsername >>
          instanceUrl: << pipeline.parameters.devhubInstanceUrl >>
          jwtKey: TEST_JWT_KEY
          consumerKey: TEST_CONSUMER_KEY
          setDefault: true
      - jsc-sfdx/run-tests:
          targetOrg: << pipeline.parameters.devhubUsername >>
      - jsc-sfdx/run-test-suites:
          targetOrg: << pipeline.parameters.devhubUsername >>
          outputDir: test-results/apex-2
      - jsc-sfdx/run-test-suites:
          targetOrg: << pipeline.parameters.devhubUsername >>
          outputDir: test-results/apex-3
          testSuites: TestSuite1,TestSuite2 TestSuite3
      - store_test_results:
          path: test-results/apex

  create_release_candidate:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Checkout salesforce/demo-package
          command: |
            git submodule update --init --recursive
            git submodule foreach --recursive git checkout master
      - jsc-sfdx/install
      - jsc-sfdx/auth:
          username: << pipeline.parameters.devhubUsername >>
          instanceUrl: << pipeline.parameters.devhubInstanceUrl >>
          jwtKey: TEST_JWT_KEY
          consumerKey: TEST_CONSUMER_KEY
          setDefault: true
      - jsc-sfdx/package-build:
          projectPath: salesforce/demo-package
          package: PACKAGE_ID
          isReleaseCandidate: true
          packageVersionExport: MY_RC_PACKAGE_VERSION
      - run:
          name: Echo package version
          command: |
            echo "New package version is: $MY_RC_PACKAGE_VERSION"

workflows:
  test-pack:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint
      - orb-tools/pack
      - shellcheck/check:
          dir: ./src/scripts
          exclude: SC2148
      - orb-tools/publish-dev:
          orb-name: jsc/salesforce
          context: orb-publishing
          requires:
            - orb-tools/lint
            - orb-tools/pack
            - shellcheck/check
      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          context: orb-publishing
          requires:
            - orb-tools/publish-dev

  integration-test_deploy:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      # - jsc-sfdx/scratch_org_test:
      #     name: scratch_org_test
      #     devhubUsername: << pipeline.parameters.devhubUsername >>
      #     devhubInstanceUrl: << pipeline.parameters.devhubInstanceUrl >>
      #     jwtKey: TEST_JWT_KEY
      #     consumerKey: TEST_CONSUMER_KEY
      #     setupScript: scripts/shell/setup.sh
      #     projectPath: salesforce/demo-package
      #     additionalSteps:
      #       - run:
      #           name: Checkout submodules
      #           command: |
      #             git submodule update --init --recursive
      #             git submodule foreach --recursive git checkout master
      # - jsc-sfdx/scratch_org_test:
      #     name: scratch_org_test_with_lwc
      #     devhubUsername: << pipeline.parameters.devhubUsername >>
      #     devhubInstanceUrl: << pipeline.parameters.devhubInstanceUrl >>
      #     jwtKey: TEST_JWT_KEY
      #     consumerKey: TEST_CONSUMER_KEY
      #     setupScript: scripts/shell/setup.sh
      #     projectPath: salesforce/demo-package
      #     runPrettier: true
      #     runLwcTests: true
      #     additionalSteps:
      #       - run:
      #           name: Checkout submodules
      #           command: |
      #             git submodule update --init --recursive
      #             git submodule foreach --recursive git checkout master
      - jsc-sfdx/build_release_candidate_version:
          devhubUsername: << pipeline.parameters.devhubUsername >>
          devhubInstanceUrl: << pipeline.parameters.devhubInstanceUrl >>
          jwtKey: TEST_JWT_KEY
          consumerKey: TEST_CONSUMER_KEY
          projectPath: salesforce/demo-package
          requireInstallationKey: false
          package: PACKAGE_ID
          additionalSteps:
            - run:
                name: Checkout submodules
                command: |
                  git submodule update --init --recursive
                  git submodule foreach --recursive git checkout master
      - jsc-sfdx/beta_package_deploy:
          name: "sandbox_deploy_new_build"
          devhubUsername: << pipeline.parameters.devhubUsername >>
          targetOrgUsername: << pipeline.parameters.uatSandboxUsername >>
          devhubInstanceUrl: << pipeline.parameters.devhubInstanceUrl >>
          devhubJwtKey: TEST_JWT_KEY
          targetOrgJwtKey: TEST_JWT_KEY
          devhubConsumerKey: TEST_CONSUMER_KEY
          targetOrgConsumerKey: TEST_CONSUMER_KEY_UAT
          package: PACKAGE_ID
          projectPath: salesforce/demo-package
          deployDirectories: src/deploy/main src/deploy/special
          additionalSteps:
            - run:
                name: Checkout submodules
                command: |
                  git submodule update --init --recursive
                  git submodule foreach --recursive git checkout master
      - jsc-sfdx/beta_package_deploy:
          name: "sandbox_deploy_latest_build"
          devhubUsername: << pipeline.parameters.devhubUsername >>
          targetOrgUsername: << pipeline.parameters.uatSandboxUsername >>
          devhubInstanceUrl: << pipeline.parameters.devhubInstanceUrl >>
          devhubJwtKey: TEST_JWT_KEY
          targetOrgJwtKey: TEST_JWT_KEY
          devhubConsumerKey: TEST_CONSUMER_KEY
          targetOrgConsumerKey: TEST_CONSUMER_KEY_UAT
          package: PACKAGE_ID
          buildNewPackage: false
          requires:
            - sandbox_deploy_new_build
      - packaging_commands
      - testing_commands:
          requires:
            - packaging_commands
      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: jsc/salesforce
          context: orb-publishing
          add-pr-comment: false
          fail-if-semver-not-indicated: true
          publish-version-tag: false
          requires:
            - testing_commands
            # - scratch_org_test
            # - scratch_org_test_with_lwc
            - jsc-sfdx/build_release_candidate_version
            - sandbox_deploy_latest_build
          filters:
            branches:
              only:
                - master
                - main
