version: 2.1

orbs:
  jsc-sfdx: jsc/salesforce@<<pipeline.parameters.dev-orb-version>>
  orb-tools: circleci/orb-tools@10.0
  bats: circleci/bats@1.0
  shellcheck: circleci/shellcheck@2.0

parameters:
  run-integration-tests:
    description: An internal flag to prevent integration test from running before a development version has been created.
    type: boolean
    default: false
  dev-orb-version:
    description: >
      The development version of the orb to test.
      This value is automatically adjusted by the "trigger-integration-tests-workflow" job to correspond with the specific version created by the commit and should not be edited.
      A "dev:alpha" version must exist for the initial pipeline run.
    type: string
    default: "dev:alpha"
  username-prod:
    description: Production username for the devhub org
    type: string
    default: info@curious-impala-bhgtyu.com
  instanceurl-prod:
    description: Production instance URL
    type: string
    default: https://curious-impala-bhgtyu-dev-ed.my.salesforce.com
  username-uat:
    description: Username for the UAT sandbox
    type: string
    default: business@lietzau-consulting.de.uat

jobs:
  packaging_commands:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Checkout salesforce/demo-package
          command: |
            git submodule update --init --recursive
            git submodule foreach --recursive git checkout master
      - jsc-sfdx/install
      - jsc-sfdx/auth:
          username: << pipeline.parameters.username-prod >>
          instanceUrl: << pipeline.parameters.instanceurl-prod >>
          jwtKey: TEST_JWT_KEY
          consumerKey: TEST_CONSUMER_KEY
          setDefault: true
      - jsc-sfdx/auth:
          instanceUrl: https://test.salesforce.com
          username: << pipeline.parameters.username-uat >>
          jwtKey: TEST_JWT_KEY
          consumerKey: TEST_CONSUMER_KEY_UAT
      - jsc-sfdx/package-get-installed:
          targetOrg: << pipeline.parameters.username-uat >>
          devhubUsername: << pipeline.parameters.username-prod >>
      - jsc-sfdx/package-build:
          projectPath: salesforce/demo-package
          package: PACKAGE_ID
      - jsc-sfdx/package-install:
          installLatestBuild: false
          targetOrg: << pipeline.parameters.username-prod >>

  testing_commands:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - jsc-sfdx/install
      - jsc-sfdx/auth:
          username: << pipeline.parameters.username-prod >>
          instanceUrl: << pipeline.parameters.instanceurl-prod >>
          jwtKey: TEST_JWT_KEY
          consumerKey: TEST_CONSUMER_KEY
          setDefault: true
      - jsc-sfdx/run-tests:
          targetOrg: << pipeline.parameters.username-prod >>
      - jsc-sfdx/run-test-suites:
          targetOrg: << pipeline.parameters.username-prod >>
          outputDir: test-results/apex-2
      - jsc-sfdx/run-test-suites:
          targetOrg: << pipeline.parameters.username-prod >>
          outputDir: test-results/apex-3
          testSuites: TestSuite1,TestSuite2 TestSuite3
      - store_test_results:
          path: test-results/apex

  create_release_candidate:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Checkout salesforce/demo-package
          command: |
            git submodule update --init --recursive
            git submodule foreach --recursive git checkout master
      - jsc-sfdx/install
      - jsc-sfdx/auth:
          username: << pipeline.parameters.username-prod >>
          instanceUrl: << pipeline.parameters.instanceurl-prod >>
          jwtKey: TEST_JWT_KEY
          consumerKey: TEST_CONSUMER_KEY
          setDefault: true
      - jsc-sfdx/package-build:
          projectPath: salesforce/demo-package
          package: PACKAGE_ID
          isReleaseCandidate: true
          packageVersionExport: MY_RC_PACKAGE_VERSION
      - run:
          name: Echo package version
          command: |
            echo "New package version was: $MY_RC_PACKAGE_VERSION"
      - jsc-sfdx/package-promote:
          projectPath: salesforce/demo-package
          devhubUsername: << pipeline.parameters.username-prod >>
          packageVersionId: MY_RC_PACKAGE_VERSION
      - run:
          name: Cleanup promoted version
          command: |
            cd salesforce/demo-package
            sfdx force:package:version:delete -v << pipeline.parameters.username-prod >> -p $MY_RC_PACKAGE_VERSION --noprompt

workflows:
  test-pack:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint
      - orb-tools/pack
      - shellcheck/check:
          dir: ./src/scripts
          exclude: SC2148
      - orb-tools/publish-dev:
          orb-name: jsc/salesforce
          context: orb-publishing
          requires:
            - orb-tools/lint
            - orb-tools/pack
            - shellcheck/check
      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          context: orb-publishing
          requires:
            - orb-tools/publish-dev

  integration-test_deploy:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      - packaging_commands
      - testing_commands:
          requires:
            - packaging_commands
      - create_release_candidate
      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: jsc/salesforce
          context: orb-publishing
          add-pr-comment: false
          fail-if-semver-not-indicated: true
          publish-version-tag: false
          requires:
            - testing_commands
            - create_release_candidate
          filters:
            branches:
              only:
                - master
                - main
