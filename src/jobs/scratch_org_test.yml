description: |
  A simple job to verify a sfdx-project: Runs a setup script to prepare a scratch org environment and executes all tests on the scratch org. Test results are stored in a "test-results" folder
  below the sfdx project root and automatically uploaded. You can use the additionalSteps parameter to perform LWC testing, checkout submodules or perform other custom actions.

parameters:
  additionalSteps:
    default: []
    description: Provide any optional steps you would like to run prior to the scratch org setup
    type: steps
  postTestSteps:
    default: []
    description: Provide additional steps that you would like to run after regular apex tests executed. The steps are executed before the scratch org is deleted.
    type: steps
  devhubUsername:
    description: Username or alias of the DevHub
    type: string
  devhubInstanceUrl:
    description: Instance url of the DevHub, if you have a custom domain enabled.
    default: https://login.salesforce.com
    type: string
  jwtKey:
    description: Name of the environment variable containing the base64 encoded private JWT key (server.key file) to authenticate to the DevHub.
    default: DEVHUB_JWT_KEY
    type: env_var_name
  consumerKey:
    description: Name of the environment variable containing the consumner key of the connected app on the DevHub. The CLI refers to this as "client id"
    default: DEVHUB_CONSUMER_KEY
    type: env_var_name
  setupScript:
    description: >
      Provide the path relative to the sfdx-project root of the script that handles setup of the scratch org environment.
      The script should handle scratch org creation, installation of upstream dependencies and source push and must work
      in a CI environment (e.g. handle secrets through environment variables).
    type: string
  scratchOrgAlias:
    description: Local alias for the created scratch org. The name is purely cosmetic for step names.
    default: Test_Scratch_Org
    type: string
  projectPath:
    description: >
      Provide the path to the root of your sfdx-project. Keep empty, if the repository root is the sfdx project root.
      Use this if your repository has multiple sfdx projects.
    type: string
    default: ""
  runPrettier:
    description: Runs prettier on the project path before all other commands and exits with error, if unformatted files are present.
    default: false
    type: boolean
  runLwcTests:
    description: Optionally runs LWC tests. This runs the test script "test:lwc:unit:ci" specified in the package.json.
    default: false
    type: boolean
  cleanScratchOrg:
    description: Cleanup (delete) the scratch org after the job finished.
    default: true
    type: boolean

docker:
  - image: cimg/openjdk:17.0-node

steps:
  - checkout
  - steps: << parameters.additionalSteps >>
  - when:
      condition:
        or: [<< parameters.runPrettier >>, << parameters.runLwcTests >>]
      steps:
        - run:
            name: "Install NPM packages"
            command: |
              if [ -n "<< parameters.projectPath >>" ]; then
                cd "<< parameters.projectPath >>" || exit 1
              fi
              npm ci
  - when:
      condition: << parameters.runPrettier >>
      steps:
        - run:
            name: "Run Prettier with project configuration"
            command: |
              if [ -n "<< parameters.projectPath >>" ]; then
                cd "<< parameters.projectPath >>" || exit 1
              fi
              npm run prettier:check:ci
  - when:
      condition: << parameters.runLwcTests >>
      steps:
        - run:
            name: "Run LWC tests locally"
            command: |
              if [ -n "<< parameters.projectPath >>" ]; then
                cd "<< parameters.projectPath >>" || exit 1
              fi
              set +e
              npm run test:lwc:unit:ci
              exitCode=$?
              mkdir -p test-results/lwc
              cp junit.xml test-results/lwc
              exit $exitCode
  - install
  - auth:
      username: << parameters.devhubUsername >>
      instanceUrl: << parameters.devhubInstanceUrl >>
      jwtKey: << parameters.jwtKey >>
      consumerKey: << parameters.consumerKey >>
      setDefault: true
  - run:
      name: "Run scratch org setup: << parameters.scratchOrgAlias >>"
      command: |
        if [ -n "<< parameters.projectPath >>" ]; then
          cd "<< parameters.projectPath >>" || exit 1
        fi
        source << parameters.setupScript >> -a << parameters.scratchOrgAlias >> -d 1
  - run-tests:
      targetOrg: << parameters.scratchOrgAlias >>
      outputDir: <<# parameters.projectPath >><< parameters.projectPath >>/<</ parameters.projectPath >>test-results/apex
  - steps: << parameters.postTestSteps >>
  - when:
      condition: << parameters.cleanScratchOrg >>
      steps:
        - run:
            name: Clean Scratch Org
            command: |
              sf org delete scratch --target-org << parameters.scratchOrgAlias >> --no-prompt
  - store_test_results:
      path: <<# parameters.projectPath >><< parameters.projectPath >>/<</ parameters.projectPath >>test-results
